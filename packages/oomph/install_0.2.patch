diff --git a/CMakeLists.txt b/CMakeLists.txt
index ba19089..2ba222a 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,6 +1,12 @@
 cmake_minimum_required(VERSION 3.17)
 # CMake version is set at 3.17 because of find_package(CUDAToolkit)
 
+if (NOT ${CMAKE_VERSION} VERSION_LESS 3.27)
+    # new in 3.27: additionally use uppercase <PACKAGENAME>_ROOT
+    # environment and CMake variables for find_package
+    cmake_policy(SET CMP0144 NEW)
+endif()
+
 set(OOMPH_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
 list(APPEND CMAKE_MODULE_PATH "${OOMPH_MODULE_PATH}")
 
@@ -108,11 +114,11 @@ endif()
 install(EXPORT oomph-targets
     FILE oomph-targets.cmake
     NAMESPACE oomph::
-    DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake)
+    DESTINATION ${CMAKE_INSTALL_LIBDIR}/oomph/cmake)
 
 configure_package_config_file(${CMAKE_CURRENT_SOURCE_DIR}/cmake/oomphConfig.cmake.in
     ${CMAKE_CURRENT_BINARY_DIR}/oomphConfig.cmake
-    INSTALL_DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake)
+    INSTALL_DESTINATION ${CMAKE_INSTALL_LIBDIR}/oomph/cmake)
 
 write_basic_package_version_file(oomphConfigVersion.cmake
     VERSION ${PROJECT_VERSION} COMPATIBILITY SameMajorVersion)
@@ -125,7 +131,7 @@ install(
         ${CMAKE_CURRENT_LIST_DIR}/cmake/FindUCX.cmake
         ${CMAKE_CURRENT_LIST_DIR}/cmake/FindPMIx.cmake
     DESTINATION
-        ${CMAKE_INSTALL_LIBDIR}/cmake)
+        ${CMAKE_INSTALL_LIBDIR}/oomph/cmake)
 
 export(EXPORT oomph-targets
     FILE "${CMAKE_CURRENT_BINARY_DIR}/oomph-targets.cmake")
diff --git a/cmake/oomph_external_dependencies.cmake b/cmake/oomph_external_dependencies.cmake
index ec672b5..a578ef5 100644
--- a/cmake/oomph_external_dependencies.cmake
+++ b/cmake/oomph_external_dependencies.cmake
@@ -31,17 +31,30 @@ endif()
 # ---------------------------------------------------------------------
 # google test setup
 # ---------------------------------------------------------------------
-add_external_cmake_project(
-    NAME googletest
-    PATH ext/googletest
-    INTERFACE_NAME ext-gtest
-    LIBS libgtest.a libgtest_main.a
-    CMAKE_ARGS
-        "-DCMAKE_BUILD_TYPE=release"
-        "-DBUILD_SHARED_LIBS=OFF"
-        "-DBUILD_GMOCK=OFF")
-# on some systems we need link explicitly against threads
-if (TARGET ext-gtest)
-    find_package (Threads)
-    target_link_libraries(ext-gtest INTERFACE Threads::Threads)
+cmake_dependent_option(OOMPH_USE_BUNDLED_GTEST "Use bundled googletest lib." ON
+    "OOMPH_USE_BUNDLED_LIBS" OFF)
+if (OOMPH_WITH_TESTING)
+    if(OOMPH_USE_BUNDLED_GTEST)
+        add_external_cmake_project(
+            NAME googletest
+            PATH ext/googletest
+            INTERFACE_NAME ext-gtest
+            LIBS libgtest.a libgtest_main.a
+            CMAKE_ARGS
+                "-DCMAKE_BUILD_TYPE=release"
+                "-DBUILD_SHARED_LIBS=OFF"
+                "-DBUILD_GMOCK=OFF")
+        # on some systems we need link explicitly against threads
+        if (TARGET ext-gtest)
+            find_package (Threads)
+            target_link_libraries(ext-gtest INTERFACE Threads::Threads)
+        endif()
+    else()
+        # Use system provided google test
+        find_package(GTest REQUIRED)
+        add_library(ext-gtest INTERFACE)
+        if (${CMAKE_VERSION} VERSION_LESS "3.20.0")
+            target_link_libraries(ext-gtest INTERFACE GTest::GTest GTest::Main)
+        else()
+            target_link_libraries(ext-gtest INTERFACE GTest::gtest GTest::gtest_main)
+        endif()
+    endif()
 endif()
diff --git a/test/CMakeLists.txt b/test/CMakeLists.txt
index 06d703a..5217bba 100644
--- a/test/CMakeLists.txt
+++ b/test/CMakeLists.txt
@@ -65,6 +65,7 @@ function(reg_parallel_test t_ lib n)
         NAME ${t}
         COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} ${n} ${MPIEXEC_PREFLAGS}
             $<TARGET_FILE:${t}> ${MPIEXEC_POSTFLAGS})
+    set_tests_properties(${t} PROPERTIES RUN_SERIAL TRUE)
 endfunction()
 
 if (OOMPH_WITH_MPI)
